/*
 * The MIT License (MIT)
 *
 * Copyright (c) 2015-2023 Patrick Reinhart
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
plugins {
  id 'java-library'
  id 'eclipse'
  id 'org.owasp.dependencycheck' version '8.2.1'
  id 'org.kordamp.gradle.java-project' version '0.51.0'
}

if (!project.hasProperty('sonatypeUsername')) ext.sonatypeUsername = '**undefined**'
if (!project.hasProperty('sonatypePassword')) ext.sonatypePassword = '**undefined**'

defaultTasks 'build'

java {
  sourceCompatibility = JavaVersion.VERSION_1_8
}

configurations {
  asciidoclet
}

repositories {
  mavenCentral()
}

dependencies {
  compileOnly 'jakarta.platform:jakarta.jakartaee-api:8.0.0'

  implementation 'org.slf4j:slf4j-api:2.0.7'
  implementation 'com.rabbitmq:amqp-client:5.17.0'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'

  testImplementation 'jakarta.platform:jakarta.jakartaee-api:8.0.0'
  testImplementation 'org.hamcrest:hamcrest:2.2'
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
  testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.3'
  testImplementation 'org.mockito:mockito-core:5.3.1'
  testImplementation 'org.mockito:mockito-junit-jupiter:5.3.1'

  testRuntimeOnly 'org.junit.platform:junit-platform-runner:1.9.3'
  testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'
  testRuntimeOnly 'ch.qos.logback:logback-classic:1.4.7'
}

compileJava {
  doFirst {
    options.compilerArgs = [
      '-Xlint:all'
    ]
  }
}

jar {
  manifest.attributes 'Automatic-Module-Name': "net.reini.rabbitmq.cdi"
}

test {
  useJUnitPlatform()
  testLogging {
    events 'skipped'
  }
}

dependencyUpdates.resolutionStrategy {
  componentSelection { rules ->
    rules.all { ComponentSelection selection ->
      boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'pr', 'ea'].any { qualifier ->
        selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
      }
      if (rejected) {
        selection.reject('Release candidate')
      }
    }
  }
}

config {
  release = !project.version.endsWith('-SNAPSHOT')
  info {
    vendor = 'reinhapa'
    name = 'RabbitMQ JavaEE/JakartaEE CDI enabler'
    description = 'Enables CDI based usage of RabbitMQ within a JavaEE/JakartaEE application.'
    inceptionYear = '2015'
    links {
      website = 'https://github.com/reinhapa/rabbitmq-cdi'
      issueTracker = 'https://github.com/reinhapa/rabbitmq-cdi/issues'
      scm = 'https://github.com/reinhapa/rabbitmq-cdi.git'
    }
    scm {
      connection = 'scm:git://github.com/reinhapa/rabbitmq-cdi.git'
      developerConnection = 'scm:git://github.com/reinhapa/rabbitmq-cdi.git'
      url = 'https://github.com/reinhapa/rabbitmq-cdi'
    }
    people {
      person {
        id = 'reinhapa'
        name = 'Patrick Reinhart'
        email = 'patrick@reini.net'
        roles = [ 'developer' ]
      }
      person {
        id = 'ohumbel'
        name = 'Otmar Humbel'
        email = 'ohumbel@gmail.com'
        roles = [ 'developer' ]
      }
    }
    repositories {
      repository {
        name = 'sonatypeRelease'
        url  = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
      repository {
        name = 'sonatypeSnapshot'
        url  = 'https://oss.sonatype.org/content/repositories/snapshots/'
        credentials {
          username = sonatypeUsername
          password = sonatypePassword
        }
      }
    }
  }
  licensing {
    licenses {
      license {
        id = 'MIT'
      }
    }
  }
  docs {
    javadoc.autoLinks.enabled = false
  }
  artifacts {
    minpom.enabled = false
  }
  publishing {
    signing.enabled = release
    releasesRepository  = 'sonatypeRelease'
    snapshotsRepository = 'sonatypeSnapshot'
  }
}

normalization {
  runtimeClasspath {
    ignore('/META-INF/MANIFEST.MF')
  }
}
